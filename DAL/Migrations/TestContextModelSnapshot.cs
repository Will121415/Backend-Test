// <auto-generated />
using DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DAL.Migrations
{
    [DbContext(typeof(TestContext))]
    partial class TestContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Entity.Client", b =>
                {
                    b.Property<string>("IdClient")
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(130)");

                    b.Property<string>("Neighborhood")
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(11)");

                    b.HasKey("IdClient");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("Entity.Invoice", b =>
                {
                    b.Property<string>("IdInvoice")
                        .HasColumnType("nvarchar(4)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("IdClient")
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("SaleDate")
                        .HasColumnType("nvarchar(30)");

                    b.Property<decimal>("Subtotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalIva")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdInvoice");

                    b.HasIndex("IdClient");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("Entity.InvoiceDetail", b =>
                {
                    b.Property<int>("IdDetail")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("Discount")
                        .HasColumnType("real");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("IdInvoice")
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("IdProduct")
                        .HasColumnType("nvarchar(10)");

                    b.Property<float>("QuantityProduct")
                        .HasColumnType("real");

                    b.Property<decimal>("TolalDetail")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UnitValue")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdDetail");

                    b.HasIndex("IdInvoice");

                    b.HasIndex("IdProduct");

                    b.ToTable("InvoiceDetails");
                });

            modelBuilder.Entity("Entity.Product", b =>
                {
                    b.Property<string>("IdProduct")
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Iva")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("PurchasePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<float>("QuantityStock")
                        .HasColumnType("real");

                    b.Property<decimal>("SalePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("SupplierNit")
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("UnitMeasure")
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("IdProduct");

                    b.HasIndex("SupplierNit");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Entity.Supplier", b =>
                {
                    b.Property<string>("Nit")
                        .HasColumnType("nvarchar(15)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(11)");

                    b.HasKey("Nit");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("Entity.User", b =>
                {
                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("UserName");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Entity.Invoice", b =>
                {
                    b.HasOne("Entity.Client", null)
                        .WithMany()
                        .HasForeignKey("IdClient");
                });

            modelBuilder.Entity("Entity.InvoiceDetail", b =>
                {
                    b.HasOne("Entity.Invoice", null)
                        .WithMany("InvoiceDetails")
                        .HasForeignKey("IdInvoice");

                    b.HasOne("Entity.Product", null)
                        .WithMany()
                        .HasForeignKey("IdProduct");
                });

            modelBuilder.Entity("Entity.Product", b =>
                {
                    b.HasOne("Entity.Supplier", "Supplier")
                        .WithMany("Products")
                        .HasForeignKey("SupplierNit");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("Entity.Invoice", b =>
                {
                    b.Navigation("InvoiceDetails");
                });

            modelBuilder.Entity("Entity.Supplier", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
